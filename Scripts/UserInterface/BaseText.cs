//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using LitJson;
using UnityEngine;
using UnityEngine.UI;

namespace GraduationProject
{
	public class BaseText
	{
		protected Text text;

		static protected float ratio_width = Screen.width / 1920f;
		static protected float ratio_height = Screen.height / 1080f;
		static protected string defaultPath = "Font/";

		public JsonData Json { get; set;}

		public BaseText ()
		{

		}

		public void CreateText (Canvas canvas)
		{
			GameObject textObject = new GameObject ();
			textObject.name = "text";
			textObject.transform.SetParent (canvas.transform);
			
			text = textObject.AddComponent <Text> ();
			text.text = (string)Json["Sentence"];
			text.rectTransform.anchorMax = Vector2.zero;
			text.rectTransform.anchorMin = Vector2.zero;
			text.rectTransform.pivot = Vector2.zero;

			float[] position = JsonMapper.ToObject<float[]> (Json["position"].ToJson ());
			float[] size = JsonMapper.ToObject<float[]> (Json["size"].ToJson ());
			float[] color = JsonMapper.ToObject<float[]> (Json["fontColor"].ToJson ());

			text.rectTransform.position = new Vector3 (position[0]*ratio_width, position[1]*ratio_height, 0f);
			text.rectTransform.sizeDelta = new Vector2 (size[0]*ratio_width, size[1]*ratio_height);
			text.color = new Color (color[0]/255f, color[1]/255f, color[2]/255f, color[3]/255f);

			text.fontSize = (int)((int)Json ["fontSize"] * ratio_width);
			text.font = Resources.Load (defaultPath+(string)Json["font"], typeof (Font)) as Font;

			switch ((int)Json["textAnchor"])
			{
			case	1:
				text.alignment = TextAnchor.MiddleLeft;
				break;
			case	0:
				text.alignment = TextAnchor.MiddleCenter;
				break;
			case	-1:
				text.alignment = TextAnchor.MiddleRight;
				break;
			case	2:
				text.alignment = TextAnchor.UpperLeft;
				break;
			case	3:
				text.alignment = TextAnchor.LowerLeft;
				break;
			}
		}

		public void ChangeText (string t)
		{
			text.text = t;
		}
	}
}

