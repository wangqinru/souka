//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using LitJson;
using UnityEngine;
using UnityEngine.UI;

namespace GraduationProject
{
	public class ChangeLabel : AnimationLabel
	{
		protected Sprite[] sprites;

		public ChangeLabel ()
		{

		}

		public override void CreateMenuItem (Canvas canvas)
		{
			string[] filePath = JsonMapper.ToObject <string[]> (Json["filePath"].ToJson ());
			sprites = new Sprite[filePath.Length];

			for (int i=0; i<filePath.Length; i++)
				sprites[i] = Resources.Load (defaultPath+filePath[i], typeof (Sprite)) as Sprite;

			buttonImage = new Image[1];
			rectTransform = new RectTransform[buttonImage.Length];
			alphaAmount = new float[buttonImage.Length];
			
			information = new ButtonsInfo ();
			information.position = new Vector2 ((float)((int)Json["position_x"]), (float)((int)Json["position_y"]));
			information.size = new Vector2 ((float)((int)Json["width"]), (float)((int)Json["height"]));
			information.alpha = JsonMapper.ToObject <float[]> (Json["alpha"].ToJson ());

			GameObject buttonObject = new GameObject ();
			buttonObject.name = filePath[0];
			buttonObject.transform.parent = canvas.transform;
			
			buttonImage[0] = buttonObject.AddComponent <Image> ();
			rectTransform[0] = buttonObject.GetComponent<RectTransform> ();
			buttonImage[0].sprite = sprites[0];
			rectTransform[0].anchorMax = Vector2.zero;
			rectTransform[0].anchorMin = Vector2.zero;
			rectTransform[0].pivot = Vector2.zero;
			
			rectTransform[0].position = new Vector3 (information.position.x*ratio_width, information.position.y*ratio_height, 0f);
			rectTransform[0].sizeDelta = new Vector2 (information.size.x*ratio_width, information.size.y*ratio_height);
			buttonImage[0].color = new Color (1, 1, 1, 0f);
		}

		public void CreateVariableItem (Canvas canvas, String[] files)
		{
			sprites = new Sprite[files.Length];
			for (int i=0; i<files.Length; i++)
				sprites[i] = Resources.Load (defaultPath+files[i], typeof (Sprite)) as Sprite;
			
			buttonImage = new Image[1];
			rectTransform = new RectTransform[buttonImage.Length];
			alphaAmount = new float[buttonImage.Length];
			
			information = new ButtonsInfo ();
			information.position = new Vector2 ((float)((int)Json["position_x"]), (float)((int)Json["position_y"]));
			information.size = new Vector2 ((float)((int)Json["width"]), (float)((int)Json["height"]));
			information.alpha = JsonMapper.ToObject <float[]> (Json["alpha"].ToJson ());
			
			GameObject buttonObject = new GameObject ();
			buttonObject.name = files[0];
			buttonObject.transform.parent = canvas.transform;
			
			buttonImage[0] = buttonObject.AddComponent <Image> ();
			rectTransform[0] = buttonObject.GetComponent<RectTransform> ();
			buttonImage[0].sprite = sprites[0];
			rectTransform[0].anchorMax = Vector2.zero;
			rectTransform[0].anchorMin = Vector2.zero;
			rectTransform[0].pivot = Vector2.zero;
			
			rectTransform[0].position = new Vector3 (information.position.x*ratio_width, information.position.y*ratio_height, 0f);
			rectTransform[0].sizeDelta = new Vector2 (information.size.x*ratio_width, information.size.y*ratio_height);
			buttonImage[0].color = new Color (1, 1, 1, 0f);
		}

		public void CreateVariableItem (Image img, String[] files)
		{
			sprites = new Sprite[files.Length];
			for (int i=0; i<files.Length; i++)
				sprites[i] = Resources.Load (defaultPath+files[i], typeof (Sprite)) as Sprite;
			
			buttonImage = new Image[1];
			rectTransform = new RectTransform[buttonImage.Length];
			alphaAmount = new float[buttonImage.Length];
			
			buttonImage[0] = img;
			rectTransform[0] = buttonImage[0].GetComponent<RectTransform> ();
		}

		public virtual void ChangeSprite (int index)
		{
			buttonImage [0].sprite = sprites [index];
		}
	}
}

