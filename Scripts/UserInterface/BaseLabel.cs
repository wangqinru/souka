//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using LitJson;
using UnityEngine;
using UnityEngine.UI;

namespace GraduationProject
{
	public class BaseLabel
	{
		protected Image[] buttonImage;
		protected RectTransform[] rectTransform;
		//protected string[] filePath;
		protected ButtonsInfo information;
		
		static protected float ratio_width = Screen.width / 1920f;
		static protected float ratio_height = Screen.height / 1080f;
		static protected string defaultPath = "UserInterface/";
		
		public JsonData Json { get; set;}

		public BaseLabel ()
		{
		}

		public virtual void CreateMenuItem (Canvas canvas)
		{
			string[] filePath = JsonMapper.ToObject <string[]> (Json["filePath"].ToJson ());
			buttonImage = new Image[filePath.Length];
			rectTransform = new RectTransform[buttonImage.Length];
			
			information = new ButtonsInfo ();
			information.position = new Vector2 ((float)((int)Json["position_x"]), (float)((int)Json["position_y"]));
			information.size = new Vector2 ((float)((int)Json["width"]), (float)((int)Json["height"]));
			information.alpha = JsonMapper.ToObject <float[]> (Json["alpha"].ToJson ());
			
			
			for (int i=0; i<buttonImage.Length; i++)
			{
				GameObject buttonObject = new GameObject ();
				buttonObject.name = filePath[i];
				buttonObject.transform.parent = canvas.transform;
				
				buttonImage[i] = buttonObject.AddComponent <Image> ();
				rectTransform[i] = buttonObject.GetComponent<RectTransform> ();
				buttonImage[i].sprite = Resources.Load (defaultPath+filePath[i], typeof(Sprite)) as Sprite;
				rectTransform[i].anchorMax = Vector2.zero;
				rectTransform[i].anchorMin = Vector2.zero;
				rectTransform[i].pivot = Vector2.zero;
				
				rectTransform[i].position = new Vector3 (information.position.x*ratio_width, information.position.y*ratio_height, 0f);
				rectTransform[i].sizeDelta = new Vector2 (information.size.x*ratio_width, information.size.y*ratio_height);
			}
		}

		public virtual void CreateMenuItem (Canvas canvas, ButtonsInfo info)
		{
			string[] filePath = JsonMapper.ToObject <string[]> (Json["filePath"].ToJson ());
			buttonImage = new Image[filePath.Length];
			rectTransform = new RectTransform[buttonImage.Length];
			
			information = info;
			
			for (int i=0; i<buttonImage.Length; i++)
			{
				GameObject buttonObject = new GameObject ();
				buttonObject.name = filePath[i];
				buttonObject.transform.parent = canvas.transform;
				
				buttonImage[i] = buttonObject.AddComponent <Image> ();
				rectTransform[i] = buttonObject.GetComponent<RectTransform> ();
				buttonImage[i].sprite = Resources.Load (defaultPath+filePath[i], typeof(Sprite)) as Sprite;
				rectTransform[i].anchorMax = Vector2.zero;
				rectTransform[i].anchorMin = Vector2.zero;
				rectTransform[i].pivot = new Vector2 (information.pivot[0]/2f, information.pivot[1]/2f);
				
				rectTransform[i].position = new Vector3 (information.position.x*ratio_width, information.position.y*ratio_height, 0f);
				rectTransform[i].sizeDelta = new Vector2 (information.size.x*ratio_width, information.size.y*ratio_height);
			}
		}

		public virtual void ButtonAnimation ()
		{

		}
		
		public void Destory ()
		{
			foreach (Image image in buttonImage)
				GameObject.Destroy (image.gameObject);
		}
	}
}

