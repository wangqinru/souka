//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using LitJson;

namespace GraduationProject
{
	public class ClearImage : BaseProduction
	{
		private Image[] textures;

		public ClearImage () 
		{
		}

		public override void Execute (ProductionInfo information, IProductionObserver observer)
		{
			float alpha = Mathf.Lerp (1f, 0f, 1f - ((float)counter / (float)time));

			foreach (Image texture in textures)
			{
				if (texture != information.fadeBackGroung && texture != null)
					texture.color = new Color (1f, 1f, 1f, alpha);
			}
			counter --;
			
			if (counter <= 0)
			{
				foreach (Image texture in textures)
				{
					if (texture != information.fadeBackGroung && texture != null)
						MonoBehaviour.Destroy (texture.gameObject);
				}

				observer.NextCommand ();
			}
		}

		public override void CreateProduction (Canvas canvas)
		{
			time = (int)Json["time"];
			counter = time;

			int[] indexs = JsonMapper.ToObject<int[]> (Json ["index"].ToJson ());

			if (indexs[0] > 100)
			{
				textures = new Image[canvas.transform.childCount];
				for (int i=0; i<textures.Length; i++)
				{
					textures[i] = canvas.transform.GetChild (i).GetComponent<Image> ();
				}
			}
			else
			{
				textures = new Image[indexs.Length];
				for (int i=0; i<indexs.Length; i++)
				{
					textures[i] = canvas.transform.GetChild (indexs[i]).GetComponent<Image> ();
				}
			}
		}
	}
}

