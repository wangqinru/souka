//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using UnityEngine.UI;

namespace GraduationProject
{
	public class FadeImage : BaseProduction 
	{
		private Image fadeImage;

		public FadeImage () : base ()
		{
		}

		public override void Execute (ProductionInfo information, IProductionObserver observer)
		{
			base.Execute (information, observer);

			if (skip)
			{
				fadeImage.color = new Color (1f, 1f, 1f, target);
				observer.NextCommand ();
			}
			else
			{
				float alpha = Mathf.Lerp (current, target, 1f-((float)counter / (float)time));
				
				fadeImage.color = new Color (1f, 1f, 1f, alpha);
				counter --;
				
				if (counter <= 0)
				{
					observer.NextCommand ();
				}
			}
		}

		public override void CreateProduction (Canvas canvas)
		{
			GameObject imageObject = new GameObject ();
			imageObject.name = "Image";
			imageObject.transform.parent = canvas.transform;

			fadeImage = imageObject.AddComponent<Image> ();
			fadeImage.sprite = Resources.Load ((string)Json["filePath"], typeof(Sprite)) as Sprite;

			fadeImage.rectTransform.anchorMax = Vector2.zero;
			fadeImage.rectTransform.anchorMin = Vector2.zero;
			fadeImage.rectTransform.pivot = Vector2.zero;
			fadeImage.rectTransform.position = new Vector3 ((float)((int)Json["x"])*ratio_width, (float)((int)Json["y"])*ratio_height, 0f);
			fadeImage.rectTransform.sizeDelta = new Vector2 ((float)((int)Json["width"])*ratio_width, (float)((int)Json["height"])*ratio_height);

			current = (float)((int)Json["current"]);
			target = (float)((int)Json["target"]);
			time = (int)Json["time"];
			counter = time;

			fadeImage.color = new Color (1f, 1f, 1f, current);
		}
	}
}

